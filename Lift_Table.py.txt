# 10/27/2019: Test for Lift Table in Python 
import numpy as np
from collections import Counter
import math

# Step 1: Sort score in descending order and find occurences of each score
score = np.array([213,870,314,989,223,666,234,345,213,323,789,56,342,876,124,43,432,437,787])
rej_bad = np.array([0,1,1,1,0,0,1,1,0,0,1,0,1,1,0,0,0,1,0])
e_prob = (1000 - score)/1000.0

# Find occurences 
counter = Counter(score)

# Convert list to arrys
prob = np.arry(counter.keys())
freq = np.array(counter.values())

# Sort probabilities in descending order
ids = np.argsort(prob)[::-1]

# Arrange probs and freqs 
prob1 = prob[ids]
freq1 = freq[ids]

# Generate a new arry 
tot_size = np.array([len(score)] * len(score)

tot_bads = np.array([sum(rej_bad)] * len(score)

# Step 2: Rank
cumsum_freq = np.cumsum(freq1)
bin = 10
rank = bin * cumsum_freq/float(len(score))

# To be continued